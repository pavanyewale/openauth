{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/openauth/authenticate": {
            "get": {
                "description": "validates the auth token and returns the user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "validates the auth token and returns user details",
                "operationId": "authenticate",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "User permissions to be added in token",
                        "name": "permissions",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authentication Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthenticationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/openauth/authenticate/refresh": {
            "put": {
                "description": "Refreshes the authentication token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh authentication token",
                "operationId": "refreshAuthToken",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/openauth/group": {
            "get": {
                "description": "Get a list of all groups with optional limit and offset parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Get all groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GroupDetails"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new group with the specified details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Create a new group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Group details",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dao.Group"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a group by providing the group ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Delete a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Group details",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/openauth/group/user": {
            "get": {
                "description": "Get groups associated with a user by providing the user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Get groups by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GroupDetailsShort"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add users to a group by providing the group ID and user IDs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Add users to a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add users to group details",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddRemoveUsersToGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove users from a group by providing the groupID and userIDs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Remove users from a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Remove users from group details",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddRemoveUsersToGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/openauth/group/{id}": {
            "get": {
                "description": "Get details of a group by providing the group ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Get group details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {token}",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dao.Group"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/openauth/login": {
            "post": {
                "description": "Log in a user with username, password, OTP, and device details (username can be mobile,email or username).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/openauth/logout": {
            "put": {
                "description": "marks the session as logged out.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "marks the session as logged out",
                "operationId": "logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        },
        "/openauth/permissions": {
            "get": {
                "description": "Get a list of all permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Get all permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of results (default 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.PermissionDetailsShort"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new permission with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Create a new permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Permission details",
                        "name": "permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.PermissionDetails"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a permission by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete a permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Permission details",
                        "name": "permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DeletePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission deleted successfully"
                    }
                }
            }
        },
        "/openauth/permissions/groups": {
            "get": {
                "description": "Get permissions of a group by group ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permissions of a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "groupId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.PermissionDetailsShort"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add permissions to a group by group ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Add permissions to a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Permissions details",
                        "name": "permissions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddRemovePermissionsToGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions added to group successfully"
                    }
                }
            },
            "delete": {
                "description": "Remove permissions from a group by group ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Remove permissions from a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Permissions details",
                        "name": "permissions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddRemovePermissionsToGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions removed from group successfully"
                    }
                }
            }
        },
        "/openauth/permissions/users": {
            "get": {
                "description": "Get permissions of a user by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permissions of a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.PermissionDetailsShort"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add permissions to a user by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Add permissions to a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Permissions details",
                        "name": "permissions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddRemovePermissionsToUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions added to user successfully"
                    }
                }
            },
            "delete": {
                "description": "Remove permissions from a user by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Remove permissions from a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Permissions details",
                        "name": "permissions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddRemovePermissionsToUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions removed from user successfully"
                    }
                }
            }
        },
        "/openauth/permissions/{id}": {
            "get": {
                "description": "Get details of a permission by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Get details of a permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Token",
                        "name": "AuthToken",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Permission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PermissionDetails"
                        }
                    }
                }
            }
        },
        "/openauth/ping": {
            "get": {
                "description": "Pings the server and returns \"Everything is working fine.\"",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ping"
                ],
                "summary": "Ping the server",
                "operationId": "ping-endpoint",
                "responses": {
                    "200": {
                        "description": "Everything is working fine.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dao.Group": {
            "type": "object",
            "properties": {
                "createdByUser": {
                    "type": "integer"
                },
                "createdOn": {
                    "type": "integer"
                },
                "deleted": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedOn": {
                    "type": "integer"
                }
            }
        },
        "dto.AddRemovePermissionsToGroupRequest": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "integer"
                },
                "permIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.AddRemovePermissionsToUserRequest": {
            "type": "object",
            "properties": {
                "permIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "dto.AddRemoveUsersToGroupRequest": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "integer"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.AuthenticationResponse": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.CreateGroupRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CreatePermissionRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteGroupRequest": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "integer"
                }
            }
        },
        "dto.DeletePermissionRequest": {
            "type": "object",
            "properties": {
                "permId": {
                    "type": "integer"
                }
            }
        },
        "dto.GroupDetails": {
            "type": "object",
            "properties": {
                "createdByUser": {
                    "type": "integer"
                },
                "createdOn": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedOn": {
                    "type": "integer"
                }
            }
        },
        "dto.GroupDetailsShort": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "properties": {
                "deviceDetails": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permissions": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "dto.PermissionDetails": {
            "type": "object",
            "properties": {
                "createdByUser": {
                    "type": "integer"
                },
                "createdOn": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedOn": {
                    "type": "integer"
                }
            }
        },
        "dto.PermissionDetailsShort": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "handlers.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}